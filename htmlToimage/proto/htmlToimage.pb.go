// Code generated by protoc-gen-go. DO NOT EDIT.
// source: htmlToimage.proto

package instagram_bot_htmltoimage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ImageRequest struct {
	Input                string   `protobuf:"bytes,1,opt,name=Input,proto3" json:"Input,omitempty"`
	Format               string   `protobuf:"bytes,2,opt,name=Format,proto3" json:"Format,omitempty"`
	Height               int32    `protobuf:"varint,3,opt,name=Height,proto3" json:"Height,omitempty"`
	Width                int32    `protobuf:"varint,4,opt,name=Width,proto3" json:"Width,omitempty"`
	Zoom                 float32  `protobuf:"fixed32,5,opt,name=Zoom,proto3" json:"Zoom,omitempty"`
	Quality              int32    `protobuf:"varint,6,opt,name=Quality,proto3" json:"Quality,omitempty"`
	CropX                int32    `protobuf:"varint,7,opt,name=CropX,proto3" json:"CropX,omitempty"`
	CropY                int32    `protobuf:"varint,8,opt,name=CropY,proto3" json:"CropY,omitempty"`
	CropW                int32    `protobuf:"varint,9,opt,name=CropW,proto3" json:"CropW,omitempty"`
	CropH                int32    `protobuf:"varint,10,opt,name=CropH,proto3" json:"CropH,omitempty"`
	Html                 string   `protobuf:"bytes,11,opt,name=Html,proto3" json:"Html,omitempty"`
	Output               string   `protobuf:"bytes,12,opt,name=Output,proto3" json:"Output,omitempty"`
	Name                 string   `protobuf:"bytes,13,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageRequest) Reset()         { *m = ImageRequest{} }
func (m *ImageRequest) String() string { return proto.CompactTextString(m) }
func (*ImageRequest) ProtoMessage()    {}
func (*ImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_htmlToimage_24db1b73277c1218, []int{0}
}
func (m *ImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageRequest.Unmarshal(m, b)
}
func (m *ImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageRequest.Marshal(b, m, deterministic)
}
func (dst *ImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageRequest.Merge(dst, src)
}
func (m *ImageRequest) XXX_Size() int {
	return xxx_messageInfo_ImageRequest.Size(m)
}
func (m *ImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageRequest proto.InternalMessageInfo

func (m *ImageRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *ImageRequest) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *ImageRequest) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ImageRequest) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ImageRequest) GetZoom() float32 {
	if m != nil {
		return m.Zoom
	}
	return 0
}

func (m *ImageRequest) GetQuality() int32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *ImageRequest) GetCropX() int32 {
	if m != nil {
		return m.CropX
	}
	return 0
}

func (m *ImageRequest) GetCropY() int32 {
	if m != nil {
		return m.CropY
	}
	return 0
}

func (m *ImageRequest) GetCropW() int32 {
	if m != nil {
		return m.CropW
	}
	return 0
}

func (m *ImageRequest) GetCropH() int32 {
	if m != nil {
		return m.CropH
	}
	return 0
}

func (m *ImageRequest) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *ImageRequest) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *ImageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ImageResponse struct {
	Image                []byte   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageResponse) Reset()         { *m = ImageResponse{} }
func (m *ImageResponse) String() string { return proto.CompactTextString(m) }
func (*ImageResponse) ProtoMessage()    {}
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_htmlToimage_24db1b73277c1218, []int{1}
}
func (m *ImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageResponse.Unmarshal(m, b)
}
func (m *ImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageResponse.Marshal(b, m, deterministic)
}
func (dst *ImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageResponse.Merge(dst, src)
}
func (m *ImageResponse) XXX_Size() int {
	return xxx_messageInfo_ImageResponse.Size(m)
}
func (m *ImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageResponse proto.InternalMessageInfo

func (m *ImageResponse) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func init() {
	proto.RegisterType((*ImageRequest)(nil), "instagram.bot.htmltoimage.ImageRequest")
	proto.RegisterType((*ImageResponse)(nil), "instagram.bot.htmltoimage.ImageResponse")
}

func init() { proto.RegisterFile("htmlToimage.proto", fileDescriptor_htmlToimage_24db1b73277c1218) }

var fileDescriptor_htmlToimage_24db1b73277c1218 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0x87, 0xed, 0xba, 0xbb, 0x75, 0xb3, 0xdd, 0x83, 0x41, 0x64, 0xf4, 0x54, 0x0a, 0x62, 0x4f,
	0x45, 0xf4, 0x11, 0x04, 0xe9, 0x5e, 0xfc, 0x53, 0x84, 0xba, 0x9e, 0xcc, 0x6a, 0x68, 0x0b, 0x4d,
	0x53, 0x9b, 0xe9, 0xc1, 0xb7, 0xf2, 0x11, 0x25, 0x93, 0x96, 0x7a, 0x11, 0x6f, 0xf3, 0x7d, 0xfc,
	0x98, 0x64, 0x66, 0xd8, 0x71, 0x89, 0xaa, 0x7e, 0xd6, 0x95, 0x12, 0x85, 0x4c, 0xda, 0x4e, 0xa3,
	0xe6, 0x67, 0x55, 0x63, 0x50, 0x14, 0x9d, 0x50, 0xc9, 0x5e, 0x63, 0x62, 0x03, 0xe8, 0x02, 0xd1,
	0xf7, 0x8c, 0x05, 0x5b, 0x5b, 0x65, 0xf2, 0xb3, 0x97, 0x06, 0xf9, 0x09, 0x5b, 0x6c, 0x9b, 0xb6,
	0x47, 0xf0, 0x42, 0x2f, 0x5e, 0x65, 0x0e, 0xf8, 0x29, 0x5b, 0xde, 0xe9, 0x4e, 0x09, 0x84, 0x19,
	0xe9, 0x81, 0xac, 0x4f, 0x65, 0x55, 0x94, 0x08, 0x87, 0xa1, 0x17, 0x2f, 0xb2, 0x81, 0x6c, 0x97,
	0xbc, 0xfa, 0xc0, 0x12, 0xe6, 0xa4, 0x1d, 0x70, 0xce, 0xe6, 0xaf, 0x5a, 0x2b, 0x58, 0x84, 0x5e,
	0x3c, 0xcb, 0xa8, 0xe6, 0xc0, 0xfc, 0xa7, 0x5e, 0xd4, 0x15, 0x7e, 0xc1, 0x92, 0xb2, 0x23, 0xda,
	0x1e, 0xb7, 0x9d, 0x6e, 0x5f, 0xc0, 0x77, 0x3d, 0x08, 0x46, 0xbb, 0x83, 0xa3, 0xc9, 0xee, 0x46,
	0x9b, 0xc3, 0x6a, 0xb2, 0xf9, 0x68, 0x53, 0x60, 0x93, 0x4d, 0xed, 0x2f, 0x52, 0x54, 0x35, 0xac,
	0x69, 0x12, 0xaa, 0xed, 0x1c, 0x0f, 0x3d, 0xda, 0xb1, 0x03, 0x37, 0x9f, 0x23, 0x9b, 0xbd, 0x17,
	0x4a, 0xc2, 0xc6, 0x65, 0x6d, 0x1d, 0x5d, 0xb0, 0xcd, 0xb0, 0x31, 0xd3, 0xea, 0xc6, 0x48, 0xfb,
	0x0c, 0x2d, 0x93, 0x56, 0x16, 0x64, 0x0e, 0xae, 0x35, 0x5b, 0xa7, 0x74, 0x09, 0x0a, 0xf3, 0x37,
	0xe6, 0x3f, 0x76, 0xfa, 0x5d, 0x1a, 0xc3, 0x2f, 0x93, 0x3f, 0xef, 0x91, 0xfc, 0xbe, 0xc5, 0x79,
	0xfc, 0x7f, 0xd0, 0x7d, 0x21, 0x3a, 0xb8, 0xf2, 0xf6, 0x4b, 0x3a, 0xf6, 0xcd, 0x4f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x81, 0x34, 0x3f, 0x59, 0x01, 0x02, 0x00, 0x00,
}
