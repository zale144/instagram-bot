version: "3.6"
services:
      
  web:
    image: instagram-bot/web
    build: ./services/web
    depends_on:
    - consul
    networks:
      backend:
        aliases:
        - web.local
    environment:
      MICRO_REGISTRY: "consul"
      MICRO_REGISTRY_ADDRESS: "consul"
      WEB_PORT: 4040
      API_HOST: "http://localhost:4041"
      DEBUG: 1
    ports:
    - 4040:4040
    entrypoint: ./instagram-bot.web

  api:
    image: instagram-bot/api
    build: ./services/api
    depends_on:
    - db
    - consul
    networks:
    - backend
    environment:
      MICRO_REGISTRY: "consul"
      MICRO_REGISTRY_ADDRESS: "consul"
      DB_USER: "test"
      DB_PASS: "test"
      DB_NAME: "insta_db"
      WEB_HOST: "http://localhost:4040"
      API_PORT: 4041
      DEBUG: 1
    ports:
    - 4041:4041
    entrypoint: ./instagram-bot.api

  htmlToimage:
    image: instagram-bot/htmltoimage
    build: ./services/htmlToimage
    depends_on:
    - consul
    environment:
      MICRO_REGISTRY: "consul"
      MICRO_REGISTRY_ADDRESS: "consul"
      WEB_LOCAL: "http://web.local:4040"
      DEBUG: 1
    networks:
    - backend
    entrypoint: ./htmlToimage

  sessions:
    image: instagram-bot/sessions
    build: ./services/sessions
    depends_on:
    - consul
    environment:
      MICRO_REGISTRY: "consul"
      MICRO_REGISTRY_ADDRESS: "consul"
      RPC_URI: "http://sidecar:4000"
      DEBUG: 1
    networks:
    - backend
    entrypoint: ./instagram-bot.sessions

  db:
    image: postgres:10.4
    container_name: insta_db
    depends_on:
    - consul
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: insta_db
    networks:
      backend:
        aliases:
        - instadb
    ports:
    - 5432:5432
    expose:
    - 5432

  facedetect:
    image: instagram-bot/facedetect
    build: ./services/faceDetect
    depends_on:
    - consul
    environment:
      RPC_URI: "sidecar"
    networks:
      backend:
        aliases:
        - sidecar
    entrypoint: ["python3", "sidecar_server.py"]

  consul:
    image: consul:latest
    command: agent -server -bootstrap-expect=1 -log-level=warn -ui -client=0.0.0.0
    hostname: consul
    networks:
      backend:
        aliases:
        - consul
    ports:
    - 8500:8500

networks:
  backend:
    driver: bridge